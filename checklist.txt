1. 徒手开平方
    迭代法：
        sqrt(a)=（x+a/x）/2
            x = 10 ^ (a.length / 2);
    二分法：
        设f(x)=x^2-a
        那么sqrt(a)就是f(x)=0的根。
        你可以先找两个正值m,n使f(m)<0,f(n)>0
        根据函数的单调性，sqrt(a)就在区间（m，n）间。
        然后计算（m＋n）/2，计算f（（m＋n）/2），如果它大于零，那么sqrt(a)就在区间（m，（m＋n）/2）之间。
        小于零，就在（（m＋n）/2，n）之间，如果等于零，那么（m＋n）/2当然就是sqrt(a)。这样重复几次，你可以把sqrt(a)存在的范围一步步缩小，在最后足够精确的区间内随便取一个值，它就约等于sqrt(a)。

2. 大整数除法
    减数10倍递增取相应位数的值：
        7000 / 20 :
            1. 7000 - count * 20 * 100 = 1000, count = 3;
                100 = 10^(7000.length - 20.length);
            2. 1000 - count * 20 * 10 = 0, count = 5;
                10 = 10^(100.length - 20.length);
            3. 0 - end, result = 3 * 100 + 5 * 10 = 350;

3. 数独问题
    一个长度为2n+1的数组中，有n个数出现了2（偶数）次，除了一个独数。找出那个独数。
        二进制XOR - O(n) * O(1)
        哈希 O(n) * O(n)
    3数独问题：
    int singleNumber(int A[], int n) {
        int ones=0,twos=0,xthrees=0;
        for(int i=0;i<n;i++){
            twos|= ones&A[i];
            ones=  ones^A[i];
            xthrees= ~(ones&twos);
            ones= ones&xthrees;
            twos= twos&xthrees;
        }
        return ones;
    }

4. 第K大的数（有序数组A/B）
    二分法：
        数组A和B中检索k/2位置处数的大小，舍弃较大元素所在数组的前k/2个数；
        k = k/2;
        递归。
    二分结果：
        任意取结果S，从A和B中各自计算比S小的数总数n，个数与K相比；
        上调/下调结果S，再次检索，直到n=k。

5. 3 Sum问题：找出数组A、B和C中数据之和为K的三个数。
    对于数组A中的每一个数a，计算B、C中之和为K-a的组合；
        遍历B，得到以 K - a - b 为 key 值的哈希 h；
        遍历C，搜索h[c]。
    
6. 计算逆波兰表达式(RPN) : http://oj.leetcode.com/problems/evaluate-reverse-polish-notation/
    用栈记录操作数据

7. Longest Consecutive Sequence, [100, 4, 200, 1, 3, 2] -> 4
    Hash / 从任意元素正序逆序检索是否存在；删除已检索数据。

8. 字符串编辑距离
    http://blog.csdn.net/orbit/article/details/6649322
    http://www.cnblogs.com/biyeymyhjob/archive/2012/09/28/2707343.html

!!! 9. 芯片问题简化版：
    halfNum，找出数组中出现次数超过一半的元素,O(n) + O(1):
        如果俩数不一样，俩数均抛弃。
        数组元素O(1)删除：将目标元素与末尾元素调换，记录被删除元素个数；
            设置数组长度，删除末尾元素。

!!! 10. Have you consider that the string might be empty? This is a good question to ask during an interview.

11. Best Time to Buy and Sell Stock III
    正序/反序两次DP：http://oj.leetcode.com/discuss/1381/any-solutions-better-than-o-n-2

### Amazon，论坛内推

### practice on codility;
    https://www.hackerrank.com/
    http://codility.com/train/
    ### http://oj.leetcode.com/problems/?cong=true

Sony : 
https://sony.taleo.net/careersection/snei_san_francisco/jobdetail.ftl
    with fanal fantacy 7

contact blizzard/twitter on linkedin

Framework:
    Less
    Angular.js
    BootStrap

Android app:
    http://www.imxingzhe.com/

Midi

WebGL

澳洲移民政策
    http://www.yiminjiayuan.com/thread-68242-1-1.html